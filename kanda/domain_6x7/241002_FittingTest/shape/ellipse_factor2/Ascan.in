#domain: 6 7 0.005
#dx_dy_dz: 0.005 0.005 0.005
#time_window: 100e-9

#material: 3 0.001 1 0 ep3
#material: 9 0.001 1 0 ep9



#python:
import math
import numpy as np
from gprMax.input_cmd_funcs import *


#* Background regolith
box(0, 0, 0, 6, 6, 0.005, 'ep3', 'n')

#* Define function to make ellipese
def create_ellipse_with_boxes(x_center, y_center, z_center, a, b, height, material, box_size, c1='n'):
    boxes = []
    x_min = x_center - a
    x_max = x_center + a
    y_min = y_center - b
    y_max = y_center + b

    x_range = int(2 * a / box_size)
    y_range = int(2 * b / box_size)

    for i in range(x_range):
        for j in range(y_range):
            x = x_min + i * box_size + box_size / 2
            y = y_min + j * box_size + box_size / 2
            # 楕円の内部かどうかを判定
            if ((x - x_center) ** 2) / (a ** 2) + ((y - y_center) ** 2) / (b ** 2) <= 1:
                f1 = x - box_size / 2
                f2 = y - box_size / 2
                f4 = x + box_size / 2
                f5 = y + box_size / 2

                box(f1, f2, 0, f4, f5, 0.005, material, c1)

    return boxes

#* Center of ellipese
x_center = 3
y_center = 1.85
z_center = 0

#* Size of ellipse
vertical_size = 0.30 # y-direction size [m]
factor = 2
holizontal_size = vertical_size * factor # x-direction size [m]

#* Other fixed parameter
height = 0.005  # 高さ（z方向）
material = "ep9"  # 材料
box_size = 0.005  # ボックスの一辺の長さ

boxes = create_ellipse_with_boxes(x_center, y_center, z_center, holizontal_size / 2, vertical_size / 2, height, material, box_size)


# 作成されたボックスコマンドを表示
#for box in boxes:
#    print(box)


#end_python:

＜地形書き出し＞
#geometry_objects_write: 0 0 0 6 7 0.005 geometry



=====A-scan用=====
＜波源設定＞
#waveform: ricker 1 500e6 my_src

#hertzian_dipole: z 1.16 6.3 0 my_src
#rx: 0.84 6.3 0

＜moving pass＞
#src_steps: 0.04 0 0
#rx_steps: 0.04 0 0
トレース間隔4cmと仮定

観測幅：4m
n回数：100

#output_dir: outfiles
==========