#domain: 10 10 0.0025
#dx_dy_dz: 0.0025 0.0025 0.0025
#time_window: 100e-9

#material: 3 0.001 1 0 ep3
#material: 9 0.001 1 0 ep9



#python:
import math
import numpy as np
from gprMax.input_cmd_funcs import *


#* Background regolith
box(0, 0, 0, 10, 5, 0.0025, 'ep3', 'n')

#* Define function to make ellipese
def create_ellipse_with_boxes(x_center, y_center, z_center, a, b, height, material, box_size, c1='n'):
    boxes = []
    x_min = x_center - a
    x_max = x_center + a
    y_min = y_center - b
    y_max = y_center + b

    x_range = int(2 * a / box_size)
    y_range = int(2 * b / box_size)

    for i in range(x_range):
        for j in range(y_range):
            x_lower = x_min + i * box_size
            y_lower = y_min + j * box_size
            # 楕円の内部かどうかを判定
            if ((x_lower - x_center) ** 2) / (a ** 2) + ((y_lower - y_center) ** 2) / (b ** 2) <= 1:
                x_upper = x_lower + box_size
                y_upper = y_lower + box_size

                box(x_lower, y_lower, 0, x_upper, y_upper, height, material, c1)



#* Center of ellipese
x_center = 5
y_center = 3
z_center = 0

#* Size of ellipse
vertical_size = 0.20 # y-direction size [m]
factor = 1/3
holizontal_size = vertical_size * factor # x-direction size [m]

#* Other fixed parameter
height = 0.0025  # 高さ（z方向）
material = "ep9"  # 材料
box_size = 0.0025  # ボックスの一辺の長さ

boxes = create_ellipse_with_boxes(x_center, y_center, z_center, holizontal_size / 2, vertical_size / 2, height, material, box_size)


#end_python:

＜地形書き出し＞
#geometry_objects_write: 0 0 0 10 10 0.0025 geometry

＜地形vtiファイル作成＞
#geometry_view: 0 0 0 10 10 0.0025 0.0025 0.0025 0.0025 geometry n


=====A-scan用=====
＜波源設定＞
#waveform: ricker 1 500e6 my_src

#hertzian_dipole: z  4.5 6 0 my_src
#rx: 5.5 6 0

#output_dir: A-scan
==========
