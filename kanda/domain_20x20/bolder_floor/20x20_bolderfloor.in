#domain: 20 20 0.01

#dx_dy_dz: 0.01 0.01 0.01

#time_window: 3e-7

#material: 6 0 1 0 basalt_6
#material: 4 0 1 0 basalt_4


＜床＞
#box: 0 0 0 20 15 0.01 basalt_6 n

＜bolderの設定＞
#python:

import numpy as np
from gprMax.input_cmd_funcs import *

# small rock
for i in range(11):
    x_i = 2 + 1.5 * i
    y_i = 12 + np.random.randint(0, 20) / 10
    l_x = np.random.randint(5, 10) / 10
    l_y = np.random.randint(5, 10) / 10
    
    # objectの生成
    box(x_i, y_i, 0, x_i+l_x, y_i+l_y, 0.01, 'basalt_4')


# medium rock
for i in range(4):
    x_i = 2 + 4 * i + np.random.randint(-10, 10) / 10
    y_i = 7 + np.random.randint(0, 30) / 10
    l_x = np.random.randint(10, 30) / 10
    l_y = np.random.randint(10, 30) / 10
    
    # objectの生成
    box(x_i, y_i, 0, x_i+l_x, y_i+l_y, 0.01, 'basalt_4')


# large rock
for i in range(3):
    x_i = 2 + 6 * i  + np.random.randint(-10, 10) / 10
    y_i = 2 + np.random.randint(0, 20) / 10
    l_x = np.random.randint(30, 50) / 10
    l_y = np.random.randint(30, 50) / 10
    
    # objectの生成
    box(x_i, y_i, 0, x_i+l_x, y_i+l_y, 0.01, 'basalt_4')

#end_python:
＜ボルダーの設定〜終了〜＞


＜波源設定＞
#waveform: gaussian 1 500e6 my_src 




＜地形vtiファイル作成＞
geometry_view: 0 0 0 20 20 0.01 0.01 0.01 0.01 geometry_20x20_bolderfloor n

＜地形書き出し＞
geometry_objects_write: 0 0 0 20 20 0.01 geometry_data

＜地形読み込み＞
#geometry_objects_read: 0 0 0 geometry_data.h5 geometry_data_materials.txt


=====A-scan用=====
hertzian_dipole: z  10.5 16 0 my_src
rx:  9.5 16 0

snapshot作成
python:
for i in range(1, 60):
    print('#snapshot: 0 0 0 20 20 0.01 0.01 0.01 0.01 {} snapshot{}'.format(i*0.25e-8, i))
end_python:

output_dir: A-scan
==========



=====B-scan用=====
#hertzian_dipole: z 8.5 16 0 my_src
#rx: 7.5 16 0

＜毎回変える＞
#src_steps: 0.2 0 0
#rx_steps: 0.2 0 0
n回数：20

#output_dir: B-scan
==========

